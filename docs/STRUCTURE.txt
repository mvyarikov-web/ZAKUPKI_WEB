ZAKUPKI_WEB - Структура после рефакторинга
═════════════════════════════════════════════

📁 ZAKUPKI_WEB/
│
├── 🚀 app.py                          # Точка входа (35 строк)
├── 🌐 wsgi.py                         # WSGI для продакшена
│
├── 📦 webapp/                         # Основной пакет приложения
│   ├── __init__.py                    # create_app() фабрика
│   ├── config.py                      # Dev/Prod/Testing конфиги
│   │
│   ├── 🎯 routes/                     # Blueprints (маршруты)
│   │   ├── pages.py                   # GET / , /view/<path>
│   │   ├── files.py                   # /upload, /delete, /download
│   │   ├── search.py                  # /search, /build_index
│   │   └── health.py                  # /health
│   │
│   ├── ⚙️ services/                   # Бизнес-логика
│   │   ├── files.py                   # Валидация, безопасность
│   │   ├── indexing.py                # Обёртка DocumentProcessor
│   │   └── state.py                   # FilesState (fcntl lock)
│   │
│   └── 🔧 utils/                      # Утилиты
│       ├── logging.py                 # Логирование + request ID
│       └── errors.py                  # Обработчики ошибок
│
├── 📚 document_processor/             # Индексация (без изменений)
│   ├── core.py
│   ├── search/
│   └── ...
│
├── 🎨 templates/                      # HTML шаблоны
│   ├── index.html
│   └── view.html
│
├── 💅 static/                         # CSS, JS, images
│   ├── css/
│   ├── js/
│   └── images/
│
├── 🧪 tests/                          # Тесты (5 passed ✅)
│   ├── test_flask_endpoints.py
│   ├── test_download_endpoint.py
│   └── ...
│
├── 📝 docs/                           # Документация
│   ├── ARCHITECTURE.md                # Архитектура
│   ├── MIGRATION_GUIDE.md             # Миграция
│   └── STRUCTURE.txt                  # Этот файл
│
├── 📦 uploads/                        # Загруженные файлы
├── 📇 index/                          # Индексные файлы
├── 📋 logs/                           # Логи приложения
│   └── app.log
│
├── 💾 app_old.py                      # Резервная копия
├── 📄 REFACTORING_SUMMARY.md          # Итоговая сводка
├── 📄 requirements.txt
└── 📄 README.md


Ключевые файлы и их назначение:
════════════════════════════════

🚀 Точки входа:
   • app.py          - Разработка: python app.py
   • wsgi.py         - Продакшен: gunicorn wsgi:app

⚙️ Конфигурация:
   • webapp/config.py - DevConfig, ProdConfig, TestingConfig
   • Переменные: FLASK_ENV, SECRET_KEY, FLASK_HOST, FLASK_PORT

🎯 Маршруты (Blueprints):
   • pages.py   - Главная, просмотр файлов
   • files.py   - Загрузка, удаление, скачивание
   • search.py  - Поиск, индексация
   • health.py  - Health check

⚙️ Сервисы:
   • files.py     - is_safe_subpath(), allowed_file(), safe_filename()
   • indexing.py  - build_search_index(), search_in_index()
   • state.py     - FilesState (атомарные операции с fcntl)

🔧 Утилиты:
   • logging.py - setup_logging(), generate_request_id()
   • errors.py  - register_error_handlers()


Преимущества новой структуры:
═══════════════════════════════

✅ Модульность      - 17 файлов вместо 1 монолита
✅ Безопасность     - fcntl блокировки, валидация путей
✅ Тестируемость    - изолированные компоненты
✅ Масштабируемость - легко добавлять функции
✅ Maintainability  - чёткие зависимости
✅ Продакшен        - WSGI, proper logging, error handling
✅ Совместимость    - работает как раньше!


Команды запуска:
════════════════

# Разработка
python app.py

# Продакшен
gunicorn 'wsgi:app' -w 4 -b 127.0.0.1:8081

# Тесты
pytest tests/ -v

# Логи
tail -f logs/app.log
