#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π —Å –Ω—É–ª–µ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é –∏–∑ models.json
"""
import json
import os
import sys

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –º–æ–¥–µ–ª–µ–π
MODELS_FILE = os.path.join(os.path.dirname(__file__), '..', 'index', 'models.json')

def cleanup_zero_price_models():
    """–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –º–æ–¥–µ–ª–∏ —Å –Ω—É–ª–µ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é (price_input_per_1m == 0 –∏ price_output_per_1m == 0)"""
    
    if not os.path.exists(MODELS_FILE):
        print(f"‚ùå –§–∞–π–ª {MODELS_FILE} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    # –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    with open(MODELS_FILE, 'r', encoding='utf-8') as f:
        config = json.load(f)
    
    original_models = config.get('models', [])
    original_count = len(original_models)
    
    print(f"üìä –í—Å–µ–≥–æ –º–æ–¥–µ–ª–µ–π: {original_count}")
    
    # –§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –º–æ–¥–µ–ª–∏ - –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ, —É –∫–æ—Ç–æ—Ä—ã—Ö —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ —Ü–µ–Ω–∞ –Ω–µ —Ä–∞–≤–Ω–∞ 0
    filtered_models = []
    removed_count = 0
    
    for model in original_models:
        price_in = model.get('price_input_per_1m', 0)
        price_out = model.get('price_output_per_1m', 0)
        
        # –û—Å—Ç–∞–≤–ª—è–µ–º –º–æ–¥–µ–ª—å, –µ—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ —Ü–µ–Ω–∞ –Ω–µ —Ä–∞–≤–Ω–∞ 0
        if price_in != 0.0 or price_out != 0.0:
            filtered_models.append(model)
        else:
            removed_count += 1
            print(f"  ‚ùå –£–¥–∞–ª—è—é: {model.get('model_id')} (—Ü–µ–Ω—ã: –≤—Ö–æ–¥={price_in}, –≤—ã—Ö–æ–¥={price_out})")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞: –¥–æ–ª–∂–Ω–∞ –æ—Å—Ç–∞—Ç—å—Å—è —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ –º–æ–¥–µ–ª—å
    if len(filtered_models) == 0:
        print("‚ö†Ô∏è  –û–®–ò–ë–ö–ê: –ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –º–æ–¥–µ–ª–∏. –î–æ–ª–∂–Ω–∞ –æ—Å—Ç–∞—Ç—å—Å—è —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞.")
        print("   –î–æ–±–∞–≤—å—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ö–æ—Ç—è –±—ã –¥–ª—è –æ–¥–Ω–æ–π –º–æ–¥–µ–ª–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Å–∫—Ä–∏–ø—Ç–∞.")
        return False
    
    if removed_count == 0:
        print("‚úÖ –ù–µ—Ç –º–æ–¥–µ–ª–µ–π —Å –Ω—É–ª–µ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é. –û—á–∏—Å—Ç–∫–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.")
        return True
    
    # –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config['models'] = filtered_models
    
    # –ï—Å–ª–∏ default_model –±—ã–ª —É–¥–∞–ª–µ–Ω, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–≤—É—é –æ—Å—Ç–∞–≤—à—É—é—Å—è
    default_model = config.get('default_model')
    remaining_ids = {m['model_id'] for m in filtered_models}
    
    if default_model and default_model not in remaining_ids:
        new_default = filtered_models[0]['model_id']
        config['default_model'] = new_default
        print(f"‚ö†Ô∏è  Default –º–æ–¥–µ–ª—å '{default_model}' –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞. –ù–æ–≤–∞—è default: '{new_default}'")
    
    # –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    backup_file = MODELS_FILE + '.backup'
    with open(backup_file, 'w', encoding='utf-8') as f:
        json.dump(config, f, indent=2, ensure_ascii=False)
    print(f"üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {backup_file}")
    
    # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    with open(MODELS_FILE, 'w', encoding='utf-8') as f:
        json.dump(config, f, indent=2, ensure_ascii=False)
    
    print(f"\n‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ –º–æ–¥–µ–ª–µ–π: {removed_count}")
    print(f"üìä –û—Å—Ç–∞–ª–æ—Å—å –º–æ–¥–µ–ª–µ–π: {len(filtered_models)}")
    print(f"üíæ –§–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω: {MODELS_FILE}")
    
    return True

if __name__ == '__main__':
    print("=" * 70)
    print("üßπ –û—á–∏—Å—Ç–∫–∞ –º–æ–¥–µ–ª–µ–π —Å –Ω—É–ª–µ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é")
    print("=" * 70)
    
    success = cleanup_zero_price_models()
    
    sys.exit(0 if success else 1)
